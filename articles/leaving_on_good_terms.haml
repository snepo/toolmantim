-# title: Leaving on good terms
-# published: 2007-07-19
-# by: Scotty Weeks
-# summary: The looming concern of leaving your old job

:textile
  There are a million things to worry about with a startup. There's the
  bazillion dollar idea, there's funding, rent, the cheapest place to
  buy ramen. All of these are important to be sure but since most
  startup founders aren't starting up on their school holidays (unless
  they're MIT graduates residing in Paul Graham's small intestine&#42;)
  there's also the looming concern of leaving your old job.
  
  This is a relatively easy step if you don't like the place you work or
  if you're a sociopath but in the case that you actually work with
  people that you respect or you have a shred of human decency then you
  have a lot of strategising to do. When the idea of Snepo first started
  geminating Arse, Ben and I were working at a small shop that developed
  touch screen applications for kiosks. It was interesting work, we were
  located in an inner city warehouse complete with all of the
  fixins. We had an annoying dog, a ping pong table (upon which Arse
  and Ben LIVED). We even had a masseuse come into the office to knead our backs into paste on a monthly
  basis. 
  
  Life was pretty good. There was always weird hardware around, I had a lot of small
  projects going and I was developing things in Ruby (pre Rails). Hell, I even had an Erlang project. I was constantly writing interfaces to
  hardware devices like credit card _printers_. For an ex-web jockey
  this was heaven.
  
  *But* It was someone else's business. It may have been a developer's dream job but
   it wasn't going to make my dreams come true. Arse and Ben were in the
   same boat. However, we worked with a great bunch of people that we
   didn't want to leave in the dust on the way out the door. So here it
   is, the Snepo Guide To Fucking Off Your Old Job Without Burning
   Bridges or SGTFOYOJWBB (yeah! Airpuncher!)
  
   
  h3. Document things
  
  You've been an invaluable part of the team&#42;&#42;. That means that you
  probably have a mountain of elegant, efficient, even beautiful
  software that you've written or contributed heavily to during your
  tenure. When you're gone there's no fucking WAY that
  anybody is going to maintain it without good documentation.
  
  Do you want to know what's even worse? Even if it's well documented it
  won't be maintained unless the documentation is stellar. If your
  documentation doesn't read like a fucking Irvine Welsh novel then your
  successor is going to rewrite everything from scratch. If you can't
  convey in an engaging, entertaining way that your code is worth
  reusing then there are two things that are going to happen:
  
  * Your company will lose a lot of money and time rewriting everything
    you built 
    
  * Everyone will think you are an idiot because the new guy who takes
    your place will be sure to tell EVERYONE that the "last guy here"
    couldn't find his ass with both hands.
    
  If you write the best documentation ever, you are engaging, witty, and
  you make it easy to see why your code should be reused
  (assuming it is actuallly good enough to be reused and we _are_
  assuming that) there is about a 38% chance that it actually will be.
  
  That's what happens if someone senior takes your old role.
  
  If they get a junior in to do your job then your documentation will
  mean the difference between the poor guy flailing about like an
  epileptic housecat and being able to bugfix or maintain your work. 
  
  If it's that hard to convince someone to stand on your shoulders
  then why bother? Well, in the worst case you will still end up with a
  good body of documentation that you can use to put people at
  ease. When you get that incredulous "I can't believe you're leaving us
  all alone" puppy dog look from your manager you can point to that
  stack of hawt LaTeX typeset PDFs and say, "Hey buddy, don't
  worry it's all documented".
  
  There are probably some of you huffing and puffing about how you
  document your code anyway. I know I do-- just until a deadline
  starts breathing down my throat or until a couple of projects stack
  up. If I were to look through my "documented" projects right now
  I'd still garauntee that there are significant holes in the
  documentation having to do with things like that race condition that
  surfaced a few months after the project ended or that mysteriously
  overflowing buffer that caused three people to die in a train wreck in
  Uzbekistan. Taking the time to review and update the documentation on old projects _will_ make a world of difference to anyone who has to maintain your work after you've gone.
  
  *Here's a hint* You'll never be allowed enough time to
   document everything before you leave. When you give notice you will
   be told to finish up the project you were working on. Most likely you'll be told
   to spend your last few weeks doing mind numbing bugfixes. The key is
   to start documenting about a week _before_ you actually announce that
   you're quitting.
  
  h3. Nutting up 
  
  Get your shit together and get out the door. If you and your buddies
  really do have the talent and the best idea evar then you had better get
  moving. It takes about 18 months for someone else to commercialise on
  that cool idea that you had at lunch. If you don't move on it
  right away someone else will. 
  
  See, if you thought of something awesome then there are roughly 1000
  other people around the world that have thought of it and are also capable of building it. At least thirty of
  those people will make a business out of that idea&#42;&#42;&#42;. In order to be successful you have to be one of those thirty
  and you have to be a rockstar with big nuts. Those nuts have to be big
  enough for you to quit your job and live on ramen noodles
  for a month or two.
  
  If you are capable and have the money to survive those first few
  months then the longer you put off quitting the more opportunities you
  will miss. The more likely you are to be just another one of those
  wankers that is "gonna start a company one of these days" but never
  actually will because they're a bit too comfortable and their balls
  are just a little too narrow in diameter.
  
  h3. It's not you, it's me 
  
  <del>Breaking the news sucks.</del> Strike that. Breaking the news to your team
  sucks. These are the people that you've worked with closely the whole
  time you've been at the company. They're great&mdash;and talented&mdash;people and
  you are leaving them in the dust to pursue your rockstar dreams. In
  order to be a decent human being you need to let them know that it's
  not personal. Do your best to allay their fears that you are going to
  spend the rest of your four weeks' notice subtley fucking them over.
  
  Do this because you are a good human. If that's not motivation enough
  then remember that it never pays to burn a bridge, these are talented
  people you work with and you may want to headhunt them one of these
  days.
  
  
  h3. Why bother?  
  
  Because it's good practice! I don't believe in Karma but when you
  treat people well, they will tell their friends. If you are an asshole
  they will tell even more of their friends. The world is a very small place
  and it never pays to piss people off. Even if you hate them, which you
  probably don't, it is worth your while to be kind and go out of your
  way to make their lives more pleasant while you are leaving, even from a completely pragmatic perspective. 
  
  More importantly if you really want to start your own business you're better off starting on the right foot. At Snepo one of our major motivations to start up was to Do Things The Right Way. The very first thing you do when you start a new business is leave the old one and it was very important to us to do it The Right Way. It sets a precedent.
  
  &#42; Just kidding Paul, we love you and want to have your children. Lisp
    is neato! "Star nosed mole rats
    RULE!":http://www.xach.com/lisp/taste-for-the-web.html
  
  
  &#42;&#42; Of course you've been invaluable, you wouldn't be capable of
     starting a new company if you were just another wang would you?
  
  &#42;&#42;&#42; Those numbers are totally scientific, at Snepo we're all scienticians.
